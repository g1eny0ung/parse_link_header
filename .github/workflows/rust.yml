name: Rust

on:
  push:
    branches: [master]
    paths:
      - "**.rs"
      - "Cargo.toml"
      - ".github/workflows/rust.yml"
  pull_request:
    branches: [master]
    paths:
      - "**.rs"
      - "Cargo.toml"
      - ".github/workflows/rust.yml"

env:
  CARGO_TERM_COLOR: always

jobs:
  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.toml') }}
      - name: Clippy
        run: cargo clippy --verbose -- -D warnings

  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.toml') }}
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --all-features --verbose

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.toml') }}
      - name: cargo tarpaulin --out Xml
        run: |
          cargo install cargo-tarpaulin || true
          cargo tarpaulin --all-features --out Xml
      - uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)
